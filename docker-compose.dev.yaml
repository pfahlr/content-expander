#version: "3.8"
services:
  backend-nginx:
    container_name: backend-nginx
    env_file:
      - ./.env
    build:
      context: ./supporting-containers/nginx-backend-proxy/
      dockerfile: Dockerfile.dev
    ports:
      - "8001:80"
    volumes:
      - ./supporting-containers/nginx-backend-proxy/nginx.conf:/etc/nginx/nginx.conf:z
    depends_on:
      - backend-fastapi
    networks:
      - webcontmgr-net

  frontend-nginx:
    container_name: frontend-nginx
    env_file:
      - ./.env
    build:
      context: ./supporting-containers/nginx-frontend-proxy/
      dockerfile: Dockerfile.dev
    ports:
      - "8002:80"
    volumes:
      - ./supporting-containers/nginx-frontend-proxy/nginx.conf:/etc/nginx/nginx.conf:z
    depends_on:
      - content-exp-vite
    networks:
      - webcontmgr-net

  content-exp-vite:
    container_name: content-exp-vite
    expose:
      - "5173" #only exposed to other containers
    env_file:
      - ./.env
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/content-expander-frontend:/app/content-expander-frontend:rw,Z
    networks:
      - webcontmgr-net

  backend-fastapi:
    build:
      context: ./backend/fastapi
      dockerfile: Dockerfile
    container_name: backend-fastapi
    ports:
      - "8003:8000"  # only exposed to other containers
    expose:
      - "8000"
    env_file:
      - ./.env
    depends_on:
      - webcontmgr-db
    volumes:
      - ./backend/fastapi/src:/app/src:ro,Z
    networks:
      - webcontmgr-net

  backend-flask:
    build:
      context: ./backend-flask/
      dockerfile: Dockerfile
    container_name: backend-flask
    ports:
      - "8004:5001"
    expose:
      - "5001" # only exposed to other containers
    env_file:
      - ./.env
    depends_on:
      - webcontmgr-db
    volumes:
      - ./backend-flask/src:/app/src:ro,Z
    networks:
      - webcontmgr-net


  webcontmgr-db:
    container_name: webcontmgr-db
    restart: on-failure
    image: postgres:17
    ports:
      - "5433:5432"
    expose:
      - "5432"
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - webcontmgr-db-vol:/var/lib/postgresql/data
      #- managed-volumes/webcontmgr-db-vol:/var/lib/postgresql/data:z
    networks:
      - webcontmgr-net

networks:
  webcontmgr-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  webcontmgr-db-vol:


